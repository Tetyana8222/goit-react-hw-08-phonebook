{"version":3,"file":"static/js/370.dadc3f5f.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","../node_modules/nanoid/index.browser.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/ContactsView.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.filter;\nexport const getError = state => state.contacts.error;\nexport const getisLoading = state => state.contacts.isLoading;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  flex-direction: column;\n  max-width: 500px;\n  border: 1px solid white;\n  border-radius: 5px;\n  padding: 20px;\n  margin: 20px;\n  display: flex;\n  gap: 15px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.23), 0px 1px 1px rgba(0, 0, 0, 0.24),\n    0px 2px 1px rgba(0, 0, 0, 0.5);\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\n\nexport const TextFiled = styled.input`\n  max-width: 145px;\n  padding: 8px;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.23), 0px 1px 1px rgba(0, 0, 0, 0.24),\n    0px 2px 1px rgba(0, 0, 0, 0.5);\n  margin-bottom: 8px;\n`;\n\nexport const AddcontactBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  max-width: 150px;\n  padding: 8px;\n  border: 1px solid white;\n  border-radius: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport * as selectors from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { nanoid } from 'nanoid';\nimport { Form, TextFiled, Label, AddcontactBtn } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectors.getContacts);\n\n  const handleSubmitForm = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(3),\n      name: event.currentTarget.elements.name.value,\n      number: event.currentTarget.elements.number.value,\n    };\n\n    if (checkContactNameRepeat(newContact.name)) {\n      alert(`${newContact.name} already exists`);\n    } else {\n      dispatch(addContact(newContact));\n      event.currentTarget.reset();\n    }\n  };\n\n  const checkContactNameRepeat = name => {\n    const temporaryNameArray = contacts.map(item => item.name);\n    return temporaryNameArray.includes(name);\n  };\n  return (\n    <Form onSubmit={handleSubmitForm}>\n      <Label>\n        Name\n        <TextFiled\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label htmlFor=\"\">\n        Number\n        <TextFiled\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <AddcontactBtn type=\"submit\">ADD CONTACT</AddcontactBtn>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  border: 1px solid #fff;\n  border-radius: 5px;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.23), 0px 1px 1px rgba(0, 0, 0, 0.24),\n    0px 2px 1px rgba(0, 0, 0, 0.5);\n  padding: 20px 20px;\n  margin: 20px;\n`;\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n`;\nexport const SearchInput = styled.input`\n  width: 150px;\n  padding: 8px;\n  border-radius: 5px;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { Wrapper, Label, SearchInput } from './Filter.styled';\nimport { setFilter } from 'redux/filterSlice';\nimport * as selectors from 'redux/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectors.getFilter);\n  const handleChangeFilter = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <Wrapper>\n      <Label htmlFor=\"\">\n        Search name\n        <SearchInput\n          onChange={handleChangeFilter}\n          value={filter}\n          placeholder=\"Search\"\n        />\n      </Label>\n    </Wrapper>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n  padding: 0px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 12px;\n  justify-content: center;\n`;\n\nexport const ContactCard = styled.li`\n  width: 205px;\n  height: auto;\n  padding: 8px;\n  border: 1px solid white;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.23), 0px 1px 1px rgba(0, 0, 0, 0.24),\n    0px 2px 1px rgba(0, 0, 0, 0.5);\n`;\n\nexport const DeleteContactBtn = styled.button`\n  border: 1px solid #fff;\n  border-radius: 5px;\n`;\n","import { List, ContactCard, DeleteContactBtn } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts, deleteContact } from 'redux/operations';\nimport { getContacts } from 'redux/selectors';\nimport { getFilter } from 'redux/selectors';\n\nimport * as selectors from 'redux/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  // const filteredContacts = useSelector(selectors.getContacts);\n  const error = useSelector(selectors.getError);\n  const isLoading = useSelector(selectors.getisLoading);\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  // контакти, фільтр\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n  // відфільтровані контакти\n  const filteredContacts = contacts.filter(item =>\n    item.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase().trim())\n  );\n\n  return (\n    <>\n      {isLoading && <b>Loading contacts...</b>}\n      {filteredContacts.length === 0 && !error && !isLoading ? (\n        <p>Sorry, but no contact found.</p>\n      ) : null}\n      {error && <p>{error}</p>}\n      <List>\n        {filteredContacts.map(({ id, name, number }) => {\n          return (\n            <ContactCard key={id}>\n              <p>{name}: </p>\n              <p>{number}</p>\n              <DeleteContactBtn\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </DeleteContactBtn>\n            </ContactCard>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import React from 'react';\n// import { useDispatch, useSelector } from 'react-redux';\n\n// import { useEffect } from 'react';\n// import { fetchContacts } from 'redux/operations';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n// import authSelectors from 'redux/auth/auth-selectors';\n\nconst ContactsView = () => {\n  // const dispatch = useDispatch();\n  // const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n\n  // useEffect(() => {\n  //   dispatch(fetchContacts());\n  // }, [dispatch]);\n\n  return (\n    <>\n      <title>Contacts</title>\n\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","items","getFilter","filter","getError","error","getisLoading","isLoading","toLowerCase","includes","nanoid","size","id","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Form","styled","Label","TextFiled","AddcontactBtn","ContactForm","dispatch","useDispatch","useSelector","selectors","checkContactNameRepeat","item","onSubmit","event","preventDefault","newContact","currentTarget","elements","number","alert","addContact","reset","type","pattern","title","required","htmlFor","Wrapper","SearchInput","Filter","onChange","setFilter","placeholder","List","ContactCard","DeleteContactBtn","ContactList","useEffect","fetchContacts","filteredContacts","toLocaleLowerCase","trim","onClick","deleteContact"],"sourceRoot":""}